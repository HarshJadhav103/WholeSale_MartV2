// <auto-generated />
using Mart.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mart.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230414072010_addImageUrlToProducts")]
    partial class addImageUrlToProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mart.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Cutlery"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Stationary"
                        });
                });

            modelBuilder.Entity("Mart.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OriginalPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price10")
                        .HasColumnType("float");

                    b.Property<double>("Price25")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductNumber")
                        .HasColumnType("int");

                    b.Property<string>("VedorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Set of 6 stainless steel spoons in Lowest Price",
                            ImageUrl = "",
                            OriginalPrice = 600.0,
                            Price = 550.0,
                            Price10 = 500.0,
                            Price25 = 450.0,
                            ProductName = "Spoon",
                            ProductNumber = 1234,
                            VedorName = "Harsh"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Set of 12 Caps in Lowest Price",
                            ImageUrl = "",
                            OriginalPrice = 1200.0,
                            Price = 1100.0,
                            Price10 = 950.0,
                            Price25 = 850.0,
                            ProductName = "Caps",
                            ProductNumber = 5678,
                            VedorName = "Vicky"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Set of 12 Socks in Lowest Price",
                            ImageUrl = "",
                            OriginalPrice = 1000.0,
                            Price = 900.0,
                            Price10 = 850.0,
                            Price25 = 800.0,
                            ProductName = "Socks",
                            ProductNumber = 5679,
                            VedorName = "Vicky"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 6,
                            Description = "Set of 50 disposable Paper plates",
                            ImageUrl = "",
                            OriginalPrice = 100.0,
                            Price = 80.0,
                            Price10 = 75.0,
                            Price25 = 70.0,
                            ProductName = "Paper Plates",
                            ProductNumber = 1236,
                            VedorName = "Nandit"
                        });
                });

            modelBuilder.Entity("Mart.Models.Product", b =>
                {
                    b.HasOne("Mart.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
